/*
We'll say that 2 strings "match" if they are non-empty and their first chars are the same. 
Loop over and then return the given array of non-empty strings as follows: 
if a string matches an earlier string in the array, swap the 2 strings in the array. 
When a position in the array has been swapped, it no longer matches anything. Using a map, this can be solved making just one pass over the array. 
More difficult than it looks.
*/

public String[] allSwap(String[] strings) {
  Map<String, Integer> hm = new HashMap<>();
  String[] s = new String[strings.length];
  for (int i = 0; i < strings.length; i++){
    String sub = strings[i].substring(0, 1);
    //is it in the map
    if (hm.get(sub) != null){
      String temp = s[hm.get(sub)];
      s[i] = temp;
      s[hm.get(sub)] = strings[i];
      hm.remove(sub);
    }
    //not in the map
    else{
      s[i] = strings[i];
      hm.put(sub, i);
    }
  }
  return s;
}
