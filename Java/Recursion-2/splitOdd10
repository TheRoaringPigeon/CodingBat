/*
Given an array of ints, is it possible to divide the ints into two groups, so that the sum of one group is a multiple of 10, and the sum of the other group is odd. 
Every int must be in one group or the other. 
Write a recursive helper method that takes whatever arguments you like, and make the initial call to your recursive helper from splitOdd10(). (No loops needed.)
*/

public boolean splitOdd10(int[] nums) {
  return helper(0, nums, 0, 0);
}

public boolean helper(int start, int[] nums, int group10, int groupOdd){
  if (start >= nums.length){
    return group10 % 10 == 0 && groupOdd % 2 == 1;
  }
  return helper(start+1, nums, group10 + nums[start], groupOdd)
    || helper(start+1, nums, group10, groupOdd + nums[start]);
}
